# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    outputs: 
      ACCEPTANCE_OUT: ${{ steps.fail_build.outputs.FAILURE_TAG }}
    runs-on: ubuntu-latest
    steps:
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
    - name: test
      run: exit 0
    - name: Testing Output
      id: fail_build
      run: |
        if ${{ success() }} then '::set-output name=FAILURE_TAG::true' else '::set-output name=FAILURE_TAG::false' fi
  build2:
    runs-on: ubuntu-latest
    outputs: 
      ACCEPTANCE_OUT: ${{ steps.fail_build2.outputs.FAILURE_TAG }}
    steps:
      - name: test
        run: exit 1
      - name: Test output 2
        id: fail_build2
        run: |
          if ${{ failed() || cancelled() }} then '::set-output name=FAILURE_TAG::true' else '::set-output name=FAILURE_TAG::false' fi
  build3:
    runs-on: ubuntu-latest
    outputs: 
      ACCEPTANCE_OUT: ${{ steps.fail_build3.outputs.FAILURE_TAG }}
    steps:
      - name: Test output build3
        run: exit 0
      - name: Test output 2
        id: fail_build3
        run: |
          if ${{ failed() || cancelled() }} then '::set-output name=FAILURE_TAG::true' else '::set-output name=FAILURE_TAG::false' fi
  check:
    needs: [ build, build2, build3 ]
    runs-on: ubuntu-latest
    steps:
      - name: Print the values
        run: |
          echo "values"
          echo ${{ needs.build.outputs.ACCEPTANCE_OUT }}
          echo ${{ needs.build2.outputs.ACCEPTANCE_OUT  }}
          echo ${{ needs.build3.outputs.ACCEPTANCE_OUT  }}
          echo "compare"
          echo ${{ needs.build.outputs.ACCEPTANCE_OUT == '' }}
          echo ${{ needs.build2.outputs.ACCEPTANCE_OUT == ''   }}
          echo ${{ needs.build3.outputs.ACCEPTANCE_OUT == ''   }}
          echo "exp"
          echo ${{ contains(needs.*.outputs.ACCEPTANCE_OUT, '')  }}
          echo ${{ join(needs.*.outputs.ACCEPTANCE_OUT, ',')  }}
      
